services:
  backend:
    platform: linux/arm64/v8
    build:
      context: ./backend/
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    env_file:
      - .env
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - USE_SUPABASE=true
      - SUPABASE_URL=http://localhost:54321
      - SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      - NEXT_PUBLIC_PROD_SUPABASE_URL=${NEXT_PUBLIC_PROD_SUPABASE_URL}
      - NEXT_PUBLIC_PROD_SUPABASE_SERVICE_ROLE_KEY=${NEXT_PUBLIC_PROD_SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_DB_HOST=host.docker.internal
      - SUPABASE_DB_PORT=54322
      - SUPABASE_DB_USER=postgres
      - SUPABASE_DB_PASSWORD=postgres
      - SUPABASE_DB_NAME=postgres
      - GOOGLE_CLOUD_TRANSLATION_API_KEY=${GOOGLE_CLOUD_TRANSLATION_API_KEY}
    depends_on:
      redis:
        condition: service_healthy
    command: go run main.go
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    networks:
      - app-network
    hostname: backend
  frontend:
    platform: linux/arm64/v8
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/frontend
      - front_node_modules:/frontend/node_modules
      - front_next:/frontend/.next
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - USE_SUPABASE=true
      - NEXT_PUBLIC_SUPABASE_URL=http://localhost:54321
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8080
      - NEXT_PUBLIC_BACKEND_INTERNAL_URL=http://portfolio-amarimono_backend_1:8080
      - NEXT_PUBLIC_IMAGE_BASE_URL=http://host.docker.internal:54321/storage/v1/object/public/images
      - NEXT_PUBLIC_LOCAL_IMAGE_URL=http://localhost:54321/storage/v1/object/public/images
      - WATCHPACK_POLLING=false
      - CHOKIDAR_USEPOLLING=false
      - NEXT_TELEMETRY_DISABLED=1
      - NODE_OPTIONS=--max-old-space-size=4096
    command: >
      sh -c "
        npm install && 
        if [ \"$ENVIRONMENT\" = \"production\" ]; then
          npm run build && npm start
        else
          npm run dev
        fi
      "
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 8G
    networks:
      - app-network
    restart: unless-stopped
  redis:
    image: "redis:alpine"
    platform: linux/arm64/v8
    ports:
      - "6379:6379"
    volumes:
      - redis-store:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    networks:
      - app-network

volumes:
  front_node_modules:
  front_next:
  redis-store:

networks:
  app-network:
    driver: bridge
