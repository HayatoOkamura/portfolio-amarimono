name: Update Database

on:
  push:
    branches:
      - main
    paths:
      - 'database_dumps/dump_*.sql'  # ダンプファイルの変更がある場合のみ実行

jobs:
  update-database:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # 直前のコミットも取得する
          persist-credentials: false  # プッシュを防止

      - name: Check for database dump changes
        id: check_changes
        run: |
          # データベースダンプファイルの存在を確認
          if ls database_dumps/dump_*.sql 1> /dev/null 2>&1; then
            echo "Database dump file exists"
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "No database dump file found - skipping database update"
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Get current IP address
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          echo "Current IP address:"
          curl -s https://api.ipify.org
          echo ""

      - name: Install PostgreSQL 17 client tools
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install -y postgresql-client-17

      - name: Backup Supabase database
        if: steps.check_changes.outputs.changes == 'true'
        env:
          PGPASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          pg_dump "postgresql://postgres.qmrjsqeigdkizkrpiahs:${{ secrets.SUPABASE_DB_PASSWORD }}@aws-0-ap-northeast-1.pooler.supabase.com:5432/postgres" --format=custom > backup.dump

      - name: Update Supabase database
        if: steps.check_changes.outputs.changes == 'true'
        env:
          PGPASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          # 最新のダンプファイルを取得
          LATEST_DUMP=$(ls -t database_dumps/dump_*.sql | head -n 1)
          echo "Using dump file: $LATEST_DUMP"
          
          # データベースを更新（スキーマを再作成）
          echo "Recreating database schema..."
          psql "postgresql://postgres.qmrjsqeigdkizkrpiahs:${{ secrets.SUPABASE_DB_PASSWORD }}@aws-0-ap-northeast-1.pooler.supabase.com:5432/postgres" -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"
          
          echo "Creating required extensions..."
          psql "postgresql://postgres.qmrjsqeigdkizkrpiahs:${{ secrets.SUPABASE_DB_PASSWORD }}@aws-0-ap-northeast-1.pooler.supabase.com:5432/postgres" -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\" SCHEMA public;"
          
          echo "Applying database dump..."
          psql "postgresql://postgres.qmrjsqeigdkizkrpiahs:${{ secrets.SUPABASE_DB_PASSWORD }}@aws-0-ap-northeast-1.pooler.supabase.com:5432/postgres" < "$LATEST_DUMP"
          
          echo "Database update completed successfully" 