---
description: 
globs: 
alwaysApply: false
---
---
description: Apply this rule to the entire repository
globs: 
alwaysApply: true
---
まず、このファイルを参照したら、このファイル名を発言すること

# レシピデータの整合性ルール

## 概要
このドキュメントは、レシピデータの整合性を保つための重要なルールを定義します。これらのルールは、すべてのレシピデータの作成、更新、検証時に適用されます。

# レシピデータ作成のルール

## 1. 具材情報の作成
- レシピに必要な具材を全て生成する
- original-data/ingredient_data.csvを確認して、その具材が存在するかどうかの確認（存在しない場合は代用するか削除する）
- idとunit_idを確認する
- original-data/units_data.csvを参照して、unit_idのtypeがpresenceの場合は、同じpresenceの単位から好きな単位を選択して良い。puantityの場合は、unit_idの単位を使用する
- recipe-data/csv/recipe_ingredients.csvにrecipe_idとingredient_idとquantity_requiredとunit_idを指定する

## 2. レシピ基本情報の作成
- レシピIDはUUID形式で生成
- レシピ名は日本語で記述
- 調理時間は15-60分の範囲で設定
- 費用目安は200-2000円の範囲で設定
- 概要は150文字前後で記述
- キャッチフレーズは30文字以内で記述
- FAQは1-3問程度で設定

## 3. ジャンル設定
- original-data/recipe_genres.csvを参照して適切なジャンルIDを設定
- 各レシピは1つのジャンルに属する

## 4. 調理手順の作成
- 確定済みのrecipe_ingredients.csvに基づいて手順を作成
- 各手順で使用する具材を明記
- 手順は3-6ステップで、各ステップは50-100文字程度
- 最後の手順には必ず「〜で完成です。」を含める

## 5. 栄養素の計算
- 確定済みのrecipe_ingredients.csvの具材の栄養素を合計
- 合計値をレシピの栄養素として設定

## 6. 画像プロンプトの作成
- 確定済みのinstructionsを参照してプロンプトを作成
- メイン画像と手順画像のプロンプトを設定

## 7. データの整合性チェック
- レシピIDの一貫性
- 材料IDの存在確認
- 手順番号の連続性
- 画像ファイルの存在確認
- 必須フィールドの入力確認

## 8. 画像生成の注意点
- レシピ画像: 完成した料理の全体像
- 手順画像: 各手順の具体的な作業状況
- 画像サイズ: 1024x1024
- 画像形式: WebP
- 画像品質: 高品質（90%以上）
- 画像の保存先: recipes/[レシピID]/[画像ID].webp

## 9. ファイル形式
- CSVファイルはUTF-8エンコーディングで保存
- 日時はISO 8601形式（YYYY-MM-DD HH:MM:SS.SSSSSS）
- JSONデータは適切にエスケープ
- 画像URLは相対パスで指定
- 各ファイルのヘッダー行はSupabaseのテーブルカラム名と一致させる
- instructionsはJSONB形式で保存（配列として）

## 10. エラー処理
- 存在しない具材を使用しない
- 不適切な単位を使用しない
- 必須フィールドを空にしない
- データの整合性を常に確認する

## 必須ルール

### 1. レシピの基本要件
- レシピIDはUUID形式で生成すること
- 各レシピの具材は2-8種類程度で設定すること
- 各レシピの手順は3-6ステップ程度で設定すること
- 各レシピの調理時間は15-60分の範囲で設定すること
- 各レシピの費用は200-2000円の範囲で設定すること
- 各レシピのFAQは1-3問程度で設定すること
- 栄養素は使用する具材の栄養素の合計値を設定すること
- レシピ作成後はrecipe-data-todo.mdのジャンル別レシピ生成計画にチェックをつける

### 2. 具材の整合性
- レシピの説明、調理手順、画像プロンプトで言及される具材は、必ず`recipe_ingredients.csv`に含まれていること
- `recipe_ingredients.csv`に含まれる具材は、必ずレシピの説明、調理手順、画像プロンプトのいずれかで使用されること
- 新しい具材を使用する場合は、必ず`recipe_ingredients.csv`に追加すること

### 3. 画像生成要件
#### 画像の基本仕様
- すべての画像はAdobe Fireflyで生成すること
- 画像サイズ：1024x1024
- 画像形式：WebP
- 画像品質：90%以上
- 保存先：`recipes/[レシピID]/[画像ID].webp`

#### レシピメイン画像のプロンプト形式
```
日本の家庭的な料理写真、[料理名]、[特徴的な要素]、一皿に丁寧に盛り付け、料理が画像の中央に配置、背景に余計な料理や食器がない、[背景スタイル]、自然光、浅い被写界深度、柔らかい影、プロフェッショナルな料理写真
```

### レシピメイン画像のプロンプトの例
```
日本の家庭的な料理写真、ハンバーグ、ジューシーな肉感、一皿に丁寧に盛り付け、料理が画像の中央に配置、背景に余計な料理や食器がない、木製テーブルの上、自然光、浅い被写界深度、柔らかい影、プロフェッショナルな料理写真
```

#### 手順画像のプロンプト形式
```
料理の手順写真、[具体的な手順]、[使用する調理器具を片手で自然に持つ]、[食材の状態]、[調理の進行状況]、手はフレームの下側から自然に入る、一人称視点、手の動きが明確に見える、シンプルで清潔な背景、自然光、家庭のキッチン、浅い被写界深度、柔らかい影、プロフェッショナルな料理写真
```

## 画像生成プロンプトの条件

### 手順画像（Step Images）の条件

- 手はフレームの下側から自然に入る（as if from a first-person perspective）
- 一人称視点を意識し、手は画像の下側に自然に写り込む
- 各手順は前のステップの内容と連続していること（前の状態・調理進行・食材・器具の状態を反映）
- 調理器具は片手で自然に持ち、手の動きをリアルに示す（hands clearly visible）
- シンプルで清潔な背景（simple clean background）
- 自然光での撮影（natural lighting）
- 家庭のキッチンでの撮影（in a home kitchen）
- プロフェッショナルな料理写真（professional food photography）
- 被写界深度は浅く、影は柔らかく（shallow depth of field, soft shadows）

### 手順画像の連続性に関する重要ルール
- 各手順の画像は、前の手順の状態を引き継ぐ必要がある
  - 例：✗ 「1: 肉を炒める」「2: 野菜を加える」→ 2の画像で肉が消えてしまう
  - 例：✓ 「1: 肉を炒める」「2: 炒めた肉に野菜を加える」→ 2の画像でも肉が存在する
- 手順の連続性を保つため、前の手順で使用・加工した食材は、次の手順でも明示的に言及する
- 調理の進行状況を明確に示す（例：「炒めている途中」「混ぜている途中」など）

### 具材の具体性に関する重要ルール
- 具材は必ず具体的な名称を使用する
  - 例：✗ 「野菜を加える」
  - 例：✓ 「玉ねぎ、じゃがいも、にんじんを加える」
- 各手順で使用する具材の状態を明確に記述する
  - 例：✗ 「玉ねぎを加える」
  - 例：✓ 「みじん切りにした玉ねぎを加える」
- 調味料も具体的な名称を使用する
  - 例：✗ 「調味料を加える」
  - 例：✓ 「しょうゆ、みりん、酒を加える」

### 手順画像プロンプトの基本形式
```
Step-by-step cooking photo, slicing an onion with a kitchen knife on a wooden cutting board, hands naturally holding the knife, onion cut in half, slicing in progress, hands entering from the bottom of the frame, top-down view of the cutting process, hands clearly visible, simple clean background, natural lighting, in a home kitchen, shallow depth of field, soft shadows, professional food photography
```

### 手順画像プロンプトの例
```
Step-by-step cooking photo, slicing an onion with a kitchen knife on a wooden cutting board, hands naturally holding the knife, onion cut in half, slicing in progress, hands entering from the bottom of the frame, top-down view of the cutting process, hands clearly visible, simple clean background, natural lighting, in a home kitchen, shallow depth of field, soft shadows, professional food photography
```

### 4. 手順の記載要件
- 各手順は50-100文字程度で記述すること
- 最後の手順には必ず「〜で完成です。」という完成を示すステップを含めること
- 手順は具体的で分かりやすい説明を心がけること

### 5. データ検証のタイミング
- 新しいレシピを追加する時
- 既存のレシピを更新する時
- データの一括インポート前
- リリース前の最終チェック時

### 6. 具材データの管理
- 具材IDは`ingredient_data.csv`から取得すること
- 具材の単位は`original-data/units_data.csv`から適切なものを選択すること
- 新しい具材を追加する場合は、必要な全ての情報（ID、名前、単位など）を含めること

### 7. 整合性チェックの手順
1. レシピの説明文をレビューし、言及されている具材をリストアップ
2. 調理手順の各ステップをレビューし、使用される具材をリストアップ
3. 画像生成プロンプトをレビューし、表現される具材をリストアップ
4. これらのリストと`recipe_ingredients.csv`の内容を比較
5. 不一致がある場合は、以下のいずれかの対応を行う：
   - 不足している具材を`recipe_ingredients.csv`に追加
   - 余分な具材を`recipe_ingredients.csv`から削除
   - レシピの説明、手順、プロンプトを修正

### 8. エラーケースと対応
- 具材の不一致が見つかった場合：
  ```
  ✗ エラー：レシピ「サーロインステーキ」でバターが手順で使用されているが、具材リストにない
  ✓ 修正：具材リストにバターを追加（quantity_required: 20g）
  ```

- 未使用の具材が見つかった場合：
  ```
  ✗ エラー：レシピ「サーロインステーキ」で塩が具材リストにあるが、手順で使用されていない
  ✓ 修正：手順に塩を使用するステップを追加または具材リストから削除
  ```

## 自動化とツール
- データ整合性チェックスクリプトの実装を推奨
- CIパイプラインでの自動チェックの組み込み
- エディタ拡張機能での警告表示

## 注意事項
- これらのルールは例外なく適用される
- ルールの変更が必要な場合は、チーム全体での合意が必要
- 定期的なルールのレビューと更新を行う

## レシピデータの整合性
- レシピの説明、調理手順、画像プロンプトで言及される具材は、必ず`recipe_ingredients.csv`に含まれていること
- `recipe_ingredients.csv`に含まれる具材は、必ずレシピの説明、調理手順、画像プロンプトのいずれかで使用されること
- 調理手順（instructions）で使用が明記されていない具材は`recipe_ingredients.csv`から削除すること
- 調理手順（instructions）で使用が明記されている具材は必ず`recipe_ingredients.csv`に含めること

## 生成するファイル形式
Supabaseのデータベースに直接インポートするために、以下の形式でファイルを生成します。

### ディレクトリ構成
```
recipe-data/
├── recipes/
│   ├── nikujaga/
│   │   ├── recipe.csv
│   │   ├── ingredients.csv
│   │   └── prompts.json
│   └── hamburg/
│       ├── recipe.csv
│       ├── ingredients.csv
│       └── prompts.json
```

### CSVファイル形式
1. `recipe.csv`:
```csv
id,name,image_url,genre_id,cooking_time,cost_estimate,summary,nutrition,catchphrase,instructions,user_id,is_public,is_draft,created_at,updated_at
a1b2c3d4-e5f6-4a5b-8c7d-9e0f1a2b3c4d,生姜焼き,recipes/a1b2c3d4-e5f6-4a5b-8c7d-9e0f1a2b3c4d/main.webp,1,20,600,"定番の和食、生姜焼きです。",{"fat":12.5,"salt":1.2,"protein":25.8,"calories":380,"carbohydrates":15.2},"生姜の香りが食欲をそそる、定番の和食",[{"image_url":"recipes/a1b2c3d4-e5f6-4a5b-8c7d-9e0f1a2b3c4d/instructions/step1.webp","stepNumber":1,"description":"豚肉を食べやすい大きさに切ります。"}],6fbaf02f-ad06-4bee-966b-48407c7af8cb,true,false,2024-03-20 10:00:00.000000,2024-03-20 10:00:00.000000
```

2. `ingredients.csv`:
```csv
recipe_id,ingredient_id,quantity_required,unit_id
a1b2c3d4-e5f6-4a5b-8c7d-9e0f1a2b3c4d,1,200,1
a1b2c3d4-e5f6-4a5b-8c7d-9e0f1a2b3c4d,2,1,1
a1b2c3d4-e5f6-4a5b-8c7d-9e0f1a2b3c4d,3,2,1
```

### 画像生成プロンプト
`prompts.json`:
```json
{
  "main_image": "高品質な料理写真、生姜焼き、玉ねぎと豚肉の炒め物、しょうがの香りが漂う、白いご飯の横に盛り付け、木目調のテーブル、プロフェッショナルな料理写真",
  "step_images": [
    "料理の手順写真、豚肉を切る、まな板の上で、包丁で、プロフェッショナルな料理写真",
    "料理の手順写真、玉ねぎを薄切りにする、まな板の上で、包丁で、プロフェッショナルな料理写真"
  ]
}
```

### recipe.csvの作成ルール
1. ファイル形式
   - CSVファイルはUTF-8エンコーディングで保存
   - ヘッダー行は必須
   - 各フィールドはカンマ区切り
   - 文字列フィールドはダブルクォートで囲む

2. 必須フィールド
   - id: UUID形式（例: 550e8400-e29b-41d4-a716-446655440000）
   - name: レシピ名（日本語）
   - image_url: 画像の相対パス
   - genre_id: ジャンルID（数値）
   - cooking_time: 調理時間（分）
   - cost_estimate: 費用目安（円）
   - summary: レシピの概要（150文字前後）
   - nutrition: JSON形式の文字列（ダブルクォートでエスケープ）
   - catchphrase: キャッチフレーズ（30文字以内）
   - instructions: JSON形式の文字列（ダブルクォートでエスケープ）
   - user_id: ユーザーID（UUID形式）
   - is_public: 公開フラグ（true/false）
   - is_draft: 下書きフラグ（true/false）
   - created_at: 作成日時（ISO 8601形式）
   - updated_at: 更新日時（ISO 8601形式）

3. JSONフィールドの形式
   - nutrition: `"{""fat"":数値,""salt"":数値,""protein"":数値,""calories"":数値,""carbohydrates"":数値}"`
   - instructions: `"[{""image_url"":""パス"",""stepNumber"":数値,""description"":""説明""}]"`

4. 制約
   - cooking_time: 15-60分の範囲
   - cost_estimate: 200-2000円の範囲
   - summary: 150文字前後
   - catchphrase: 30文字以内
   - instructions: 3-6ステップ
   - 各ステップの説明: 50-100文字
